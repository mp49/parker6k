#######################################################
#
# Axis template for P6K model 3 motor driver.
# 
# Macros:
# M - base PV name (should match the motor record)
# PORT - asyn motor driver port
# ADDR - asyn address (ie. axis number)
# TIMEOUT - asyn timeout (eg 1)
#
# Matt Pearson
# May 2014
#
#######################################################

# ///
# /// Time to delay the end of move flag. This has a resolution
# /// depending on the driver polling rate.
# ///
record(ao, "$(M):DelayTime")
{
   field(PINI, "YES")
   field(EGU, "Seconds")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))P6K_A_DELAYTIME")
   field(VAL,  "0")
   info(autosaveFields, "VAL")
}

# ///
# /// Axis error message (from controller)
# ///
record(waveform, "$(M):ErrorMessage")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))P6K_A_ERROR")
    field(FTVL, "CHAR")
    field(NELM, "256")
    field(SCAN, "I/O Intr")
}

# ///
# /// Automatic drive enable
# ///
record(bo, "$(M):AutoDriveEnable")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))P6K_A_AUTO_DRIVE_ENABLE")
   field(ZNAM, "No")
   field(ONAM, "Yes")
   field(VAL,  "0")
   info(autosaveFields, "VAL")
}

# These are useful if you need to set the software limits 
# under the feet of the motor record.
#record(ao, "$(M):HighLimit")
#{
#   field(PINI, "YES")
#   field(DTYP, "asynFloat64")
#   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MOTOR_HIGH_LIMIT")
#   field(VAL,  "0")
#   info(autosaveFields, "VAL")
#}

#record(ao, "$(M):LowLimit")
#{
#   field(PINI, "YES")
#   field(DTYP, "asynFloat64")
#   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MOTOR_LOW_LIMIT")
#   field(VAL,  "0")
#   info(autosaveFields, "VAL")
#}

